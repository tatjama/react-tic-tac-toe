{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","onClick","className","value","Board","renderSquare","i","squares","this","React","Component","calculateWinner","lines","length","a","b","c","Game","handleClick","history","state","slice","xIsNext","setState","concat","Array","fill","status","current","winner","ReactDOM","render","document","getElementById"],"mappings":"wOA2BeA,MAzBf,SAAgBC,GACb,OACI,4BACAC,QAAWD,EAAMC,QACjBC,UAAa,UAAUF,EAAMG,OACxBH,EAAMG,QCkCHC,E,4MAnCXC,aAAe,SAACC,GACZ,OACI,kBAAC,EAAD,CACAH,MAAO,EAAKH,MAAMO,QAAQD,GAC1BL,QAAW,WAAK,EAAKD,MAAMC,QAAQK,O,uDAOvC,OACI,6BACI,yBAAKJ,UAAY,SACb,yBAAKA,UAAY,aACZM,KAAKH,aAAa,GAClBG,KAAKH,aAAa,GAClBG,KAAKH,aAAa,IAEvB,yBAAKH,UAAY,aACZM,KAAKH,aAAa,GAClBG,KAAKH,aAAa,GAClBG,KAAKH,aAAa,IAEvB,yBAAKH,UAAY,aACZM,KAAKH,aAAa,GAClBG,KAAKH,aAAa,GAClBG,KAAKH,aAAa,U,GA9BvBI,IAAMC,WCuD1B,SAASC,EAAgBJ,GAWrB,IAVA,IAAMK,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAECN,EAAI,EAAGA,EAAIM,EAAMC,OAASP,IAAI,CAAC,IAAD,cACjBM,EAAMN,GADW,GAC5BQ,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAElC,GAAGT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GACjE,OAAOT,EAAQO,GAGvB,OAAO,KAKIG,M,kDA5EX,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IAOVkB,YAAY,SAACZ,GACT,IAAMa,EAAU,EAAKC,MAAMD,QAErBZ,EADUY,EAAQA,EAAQN,OAAO,GACfN,QAAQc,QAC7BV,EAAgBJ,IAAYA,EAAQD,KAGvCC,EAAQD,GAAI,EAAKc,MAAME,QAAS,IAAI,IACpC,EAAKC,SAAS,CACVJ,QAASA,EAAQK,OAAO,CAAC,CACrBjB,QAAQA,KAEZe,SAAS,EAAKF,MAAME,YAlBxB,EAAKF,MAAO,CACRD,QAAQ,CAAC,CAACZ,QAASkB,MAAM,GAAGC,KAAK,QACjCJ,SAAU,GAJA,E,qDA0BT,IAIDK,EAJA,OACER,EAAUX,KAAKY,MAAMD,QACrBS,EAAUT,EAAQA,EAAQN,OAAO,GACjCgB,EAASlB,EAAgBiB,EAAQrB,SAOvC,OAJQoB,EADPE,EACe,oBAAoBA,EAClB,iBAAmBrB,KAAKY,MAAME,QAAS,IAAI,KAIzD,yBAAKpB,UAAY,QACb,yBAAKA,UAAY,cACb,kBAAC,EAAD,CACAK,QAAUqB,EAAQrB,QAClBN,QAAW,SAACK,GAAK,EAAKY,YAAYZ,OAGtC,yBAAKJ,UAAU,aACX,yBAAKA,UAAa,UAAU2B,GAASF,GACrC,mC,GA/CDlB,IAAMC,WCGzBoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6f7bbfd7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props){\r\n   return(\r\n       <button\r\n       onClick = {props.onClick}\r\n       className = {\"square \"+props.value}>\r\n           {props.value}\r\n       </button>\r\n   )\r\n}\r\n\r\n/*class Square extends React.Component{\r\n    \r\n    \r\n   \r\n    render(){\r\n        return(\r\n            <button \r\n            onClick = {()=>{this.props.onClick()}} \r\n            className=\"square \">\r\n                {this.props.value}\r\n            </button>\r\n        )\r\n    }\r\n}*/\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component{\r\n    \r\n  \r\n    renderSquare = (i)=>{       \r\n        return(\r\n            <Square \r\n            value={this.props.squares[i]}\r\n            onClick = {()=>{this.props.onClick(i)}}\r\n            />\r\n        )\r\n    }\r\n\r\n    render(){   \r\n              \r\n        return(\r\n            <div>                \r\n                <div className = \"board\">\r\n                    <div className = \"board-row\">\r\n                        {this.renderSquare(0)}\r\n                        {this.renderSquare(1)}\r\n                        {this.renderSquare(2)}\r\n                    </div>\r\n                    <div className = \"board-row\">\r\n                        {this.renderSquare(3)}\r\n                        {this.renderSquare(4)}\r\n                        {this.renderSquare(5)}\r\n                    </div>\r\n                    <div className = \"board-row\">\r\n                        {this.renderSquare(6)}\r\n                        {this.renderSquare(7)}\r\n                        {this.renderSquare(8)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            history:[{squares: Array(9).fill(null)}],            \r\n            xIsNext : true,\r\n        };\r\n    }\r\n\r\n    handleClick=(i)=>{   \r\n        const history = this.state.history;\r\n        const current = history[history.length-1];     \r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]){           \r\n            return\r\n        }\r\n        squares[i] =this.state.xIsNext? 'X':'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares:squares,\r\n            }]), \r\n            xIsNext:!this.state.xIsNext})               \r\n    }    \r\n\r\n    \r\n    \r\n\r\n    render(){\r\n        const history = this.state.history;\r\n        const current = history[history.length-1];\r\n        const winner = calculateWinner(current.squares);\r\n        let status;\r\n        (winner)?\r\n                status=('Winner is player '+winner)\r\n                :status = \"Next player: \" + (this.state.xIsNext? 'X':'O')          \r\n       \r\n\r\n        return(\r\n            <div className = \"game\">\r\n                <div className = \"game-board\">\r\n                    <Board\r\n                    squares ={current.squares} \r\n                    onClick = {(i)=>{this.handleClick(i)}}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div className = {'status '+winner}>{status}</div>\r\n                    <ol>{/**todo list */}</ol>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction calculateWinner(squares){\r\n    const lines = [\r\n      [0,1,2],\r\n      [3,4,5],\r\n      [6,7,8],\r\n      [0,3,6],\r\n      [1,4,7],\r\n      [2,5,8],\r\n      [0,4,8],\r\n      [2,4,6]\r\n    ]\r\n    for(let i = 0; i < lines.length ; i++){\r\n        const[a, b, c] = lines[i]\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a]\r\n        }\r\n    }\r\n    return null\r\n    }\r\n    \r\n\r\n\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}